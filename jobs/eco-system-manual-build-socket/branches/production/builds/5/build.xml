<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <jenkins.branch.BranchEventCause plugin="branch-api@2.7.0">
            <timestamp>1646027681229</timestamp>
            <origin>192.168.100.236 ⇒ http://jenkins-smartlog.danghung.xyz/bitbucket-scmsource-hook/notify</origin>
          </jenkins.branch.BranchEventCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.0.2.8.1">
      <queuingDurationMillis>5538</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>5531</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <jenkins.scm.api.SCMRevisionAction plugin="scm-api@595.vd5a_df5eb_0e39">
      <sourceId>4e92d50b-d52e-4ee0-a989-c1bfb2e50dcf</sourceId>
      <revision class="com.cloudbees.jenkins.plugins.bitbucket.BitbucketGitSCMRevision" plugin="cloudbees-bitbucket-branch-source@751.vda_24678a_f781">
        <head class="com.cloudbees.jenkins.plugins.bitbucket.BranchSCMHead">
          <name>production</name>
          <repositoryType>GIT</repositoryType>
        </head>
        <hash>46998ef67fc93fdaeadd2c7463b5fefa9662fddc</hash>
        <message>Merged in dev (pull request #824)

Dev

* Bugfix/SES-603
* Merged in SES-602 (pull request #815)

SES-602

* bugfix/feature/add-order-id-to-account-balance-log-cancel-mt-reuse

* Merge branch &apos;dev&apos; of https://bitbucket.org/smartlogtms/smartlog-ecosystem into dev

* bugfix/feature/create-order-reuse-success-contain…
* Merged in bugfix/SES-604 (pull request #816)

Bugfix/SES-604

* bugfix/feature/add-order-id-to-account-balance-log-cancel-mt-reuse

* Merge branch &apos;dev&apos; of https://bitbucket.org/smartlogtms/smartlog-ecosystem into dev

* bugfix/feature/throw-not-found-if-g…
* Merged in feature/update-email-recieve-test (pull request #817)

update-email-recieve-test

* done
* Merged in bugfix/SES-603 (pull request #818)

Bugfix/SES-603

* bugfix/feature/add-order-id-to-account-balance-log-cancel-mt-reuse

* bugfix/feature/add-7-hours-reuse-date-export-excel-mt-reuse

* Merge remote-tracking branch &apos;origin/dev&apos; into bugfix/SES-6…
* Merged in bugfix/SES-605 (pull request #819)

Bugfix/SES-605

* bugfix/feature/add-order-id-to-account-balance-log-cancel-mt-reuse

* Merge branch &apos;dev&apos; of https://bitbucket.org/smartlogtms/smartlog-ecosystem into dev

* Merge branch &apos;dev&apos; of https://bitbu…
* Merged in bugifx/SES-588-not-send-mail-ssc (pull request #822)

SES-588-done-send-mail-ssc

* SES-588-done-send-mail-ssc


Approved-by: Quốc Hòa
* Merged in bugfix/SES-557-not-send-mt-return-for-port (pull request #821)

Bugfix/SES-557 not send mt return for port

* SES-589-edit-noti-send-equipment-link-booking

* SES-589-noti-cma-manual

* SES-589-noti-cma-manual

* Merge branch &apos;bugfix/SES-589&apos; of …
* Merged in bugfix/SES-588-add-noti-ssc (pull request #823)

SES-588-done-add-noti-ssc-with-counter

* SES-588-done-add-noti-ssc-with-counter


Approved-by: Quốc Hòa
* Fix sync Location and Route from STM</message>
        <author>Quốc Hòa &lt;hoa.tran@gosmartlog.com&gt;</author>
        <date>2022-02-28 05:54:34.0 UTC</date>
      </revision>
    </jenkins.scm.api.SCMRevisionAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@552.vd9cc05b8a2e1">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
  </actions>
  <queueId>348291</queueId>
  <timestamp>1646027711633</timestamp>
  <startTime>1646027711637</startTime>
  <result>SUCCESS</result>
  <duration>79094</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>podTemplate(label: &apos;pod-with-gitversion&apos;, containers: [
    containerTemplate(name: &apos;docker&apos;, image: &apos;public.ecr.aws/smartlog/docker:19.03.8&apos;, ttyEnabled: true, command: &apos;cat&apos;),
    containerTemplate(name: &apos;kubectl&apos;, image: &apos;public.ecr.aws/smartlog/roffe/kubectl:v1.13.2&apos;, command: &apos;cat&apos;, ttyEnabled: true),
    containerTemplate(name: &apos;awscli&apos;, image: &apos;public.ecr.aws/smartlog/atlassian/pipelines-awscli:1.18.190&apos;, command: &apos;cat&apos;, ttyEnabled: true),
    containerTemplate(name: &apos;gitversion&apos;, image: &apos;public.ecr.aws/smartlog/gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1&apos;, command: &apos;cat&apos;, ttyEnabled: true),
  ],
  volumes: [
    hostPathVolume(mountPath: &apos;/var/run/docker.sock&apos;, hostPath: &apos;/var/run/docker.sock&apos;),
  ]) {
  node(&apos;pod-with-gitversion&apos;) {
    def isStartedByUser = currentBuild.rawBuild.getCause(hudson.model.Cause$UserIdCause) != null
    if (!isStartedByUser) return

    isDeploy = false

    isBuildSocketService = true

    successBuild = 0
    totalBuild = 0

    commitMessage = &apos;Manual Trigger Build Socket Service&apos;
    try {
      SEM_VER = &apos;0.0.0&apos;
      stage(&apos;Get source code&apos;) {
        echo &apos;Getting source code...&apos;
        checkout([
          $class: &apos;GitSCM&apos;,
          branches: [[name: &apos;*/dev&apos;]],
          extensions: scm.extensions,
          userRemoteConfigs: [[
            credentialsId: scm.userRemoteConfigs[0].credentialsId,
            name: &apos;origin&apos;,
            refspec: &apos;+refs/heads/*:refs/remotes/origin/*&apos;,
            url: scm.userRemoteConfigs[0].url
          ]],
          doGenerateSubmoduleConfigurations: false
        ])

        checkout scm

        String[] parts = sh(returnStdout: true, script: &apos;git log -1 --pretty=%B&apos;).trim().split(&apos;\n&apos;)
        commitMessage = commitMessage + &quot; (&quot; + parts[0] + &quot;)&quot;

        isDeploy = isDeploy || isBuildSocketService
        if (isBuildSocketService) { totalBuild++ }
      }

      rootDir = pwd()
      baseDeploy = load &quot;${rootDir}/Jenkins.Base.groovy&quot;
      deploy = load &quot;${rootDir}/Jenkins.Build.groovy&quot;
      deploy.init(baseDeploy)
      baseDeploy.awscli()
      if (env.BRANCH_NAME == &apos;dev&apos; &amp;&amp; isDeploy) {
        tagEnv = &apos;stage&apos;
        longEnv = &apos;Staging&apos;
        build()
      } else if (env.BRANCH_NAME == &apos;production&apos; &amp;&amp; isDeploy) {
        tagEnv = &apos;prod&apos;
        longEnv = &apos;Production&apos;
        build()
      } else if (!isDeploy) {
        echo &apos;NO BUILD&apos;
      } else {
        echo &apos;Khong phai branch production || dev nen ko lam gi ca&apos;
        error(&apos;Failed to build&apos;)
      }
    } catch (exc) {
      currentBuild.result = &apos;FAILURE&apos;
      echo &apos;I failed&apos;
      echo exc.getMessage()
    } finally {
      echo &apos;One way or another, I have finished&apos;
      try {
        deleteDir() /* clean up our workspace */
      } catch (err) {
        // Do nothing
      }
      if (isDeploy != true) {
        /* Do nothing */
      } else if (currentBuild.result == &apos;SUCCESS&apos;) {
        echo &apos;Build successful&apos;
        // slackSend channel: &apos;cma-no-boss&apos;,
        //   color: &apos;good&apos;,
        //   message: &quot;The pipeline ${currentBuild.fullDisplayName} completed successfully.&quot;
      } else if (currentBuild.result == &apos;FAILURE&apos;) {
        echo &apos;I failed :(&apos;
        slackSend channel: &apos;cma-no-boss&apos;,
            color: &apos;#c40e0e&apos;,
            message: &quot;Attention @here ${env.JOB_NAME} #${env.BUILD_NUMBER} [${commitMessage}] has failed.&quot;
        }
    }
  }
}

def build() {
  echo &quot;Process build for ${env.BRANCH_NAME} branch&quot;
  baseDeploy.generateVersion()

  deploy.buildSocketService(isBuildSocketService)

  if (isBuildSocketService) {
    successBuild++
    slackSend channel: &apos;cma-no-boss&apos;,
        color: &apos;good&apos;,
        message: &quot;The pipeline ${currentBuild.fullDisplayName}[SocketService] v.${SEM_VER} [${commitMessage}] ${successBuild}/${totalBuild} completed successfully.&quot;
  }

  currentBuild.result = &apos;SUCCESS&apos;
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>71280222</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>25251106</long>
      </entry>
      <entry>
        <string>run</string>
        <long>246140475</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>40058207</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>75406755</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>11</iota>
    <head>1:11</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>