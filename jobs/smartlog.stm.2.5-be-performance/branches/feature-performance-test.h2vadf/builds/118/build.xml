<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.40">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>khoa</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.0.2.7">
      <queuingDurationMillis>1</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <jenkins.scm.api.SCMRevisionAction plugin="scm-api@2.6.4">
      <sourceId>4ccb20cd-6188-438f-99ae-55364a736641</sourceId>
      <revision class="com.cloudbees.jenkins.plugins.bitbucket.BitbucketGitSCMRevision" plugin="cloudbees-bitbucket-branch-source@2.9.5">
        <head class="com.cloudbees.jenkins.plugins.bitbucket.BranchSCMHead">
          <name>feature/performance-test</name>
          <repositoryType>GIT</repositoryType>
        </head>
        <hash>41353cd0f928f7f20ffcaf95f69c321de387829d</hash>
        <message>Update not include
</message>
        <author>Khoa Nguyen &lt;khoa.nguyen@gosmartlog.com&gt;</author>
        <date>2021-08-10 06:05:51.0 UTC</date>
      </revision>
    </jenkins.scm.api.SCMRevisionAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.18">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.6.0">
      <buildsByBranchName>
        <entry>
          <string>feature/performance-test</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.7.0">
              <sha1>41353cd0f928f7f20ffcaf95f69c321de387829d</sha1>
              <branches class="singleton-set">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>feature/performance-test</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>118</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://bitbucket.org/smartlogtms/smartlog.stm.2.5.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.12">
      <revisionStates>
        <entry>
          <string>git https://bitbucket.org/smartlogtms/smartlog.stm.2.5.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <com.cloudbees.jenkins.plugins.bitbucket.FirstCheckoutCompletedInvisibleAction plugin="cloudbees-bitbucket-branch-source@2.9.5"/>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.90">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.0.2.7">
      <queuingDurationMillis>6766</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>6765</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>300311</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>492730</queueId>
  <timestamp>1628657160924</timestamp>
  <startTime>1628657160928</startTime>
  <result>SUCCESS</result>
  <duration>313981</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>
podTemplate(label: &apos;pod-with-gitversion&apos;, containers: [
    containerTemplate(name: &apos;docker&apos;, image: &apos;public.ecr.aws/smartlog/docker:19.03.8&apos;, ttyEnabled: true, command: &apos;cat&apos;),
    containerTemplate(name: &apos;kubectl&apos;, image: &apos;public.ecr.aws/smartlog/roffe/kubectl:v1.13.2&apos;, command: &apos;cat&apos;, ttyEnabled: true),
    containerTemplate(name: &apos;awscli&apos;, image: &apos;public.ecr.aws/smartlog/atlassian/pipelines-awscli:1.18.190&apos;, command: &apos;cat&apos;, ttyEnabled: true),
    containerTemplate(name: &apos;gitversion&apos;, image: &apos;public.ecr.aws/smartlog/gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1&apos;, command: &apos;cat&apos;, ttyEnabled: true),
  ],
  volumes: [
    hostPathVolume(mountPath: &apos;/var/run/docker.sock&apos;, hostPath: &apos;/var/run/docker.sock&apos;),
  ]) {
    node(&apos;pod-with-gitversion&apos;) {
      def isStartedByUser = currentBuild.rawBuild.getCause(hudson.model.Cause$UserIdCause) != null
      if (!isStartedByUser) return

      isDeploy = true
      isBuildBe = true

      successBuild = 0
      totalBuild = 1

      commitMessage = &quot;Manual Trigger Build Be&quot;
      try {
        SEM_VER = &apos;0.0.0&apos;
        stage(&apos;Get source code&apos;) {
          echo &apos;Getting source code...&apos;
          checkout([
            $class: &apos;GitSCM&apos;,
            branches: [[name: &apos;*/dev&apos;]],
            extensions: scm.extensions,
            userRemoteConfigs: [[
              credentialsId: scm.userRemoteConfigs[0].credentialsId,
              name: &apos;origin&apos;,
              refspec: &apos;+refs/heads/*:refs/remotes/origin/*&apos;,
              url: scm.userRemoteConfigs[0].url
            ]],
            doGenerateSubmoduleConfigurations: false
          ])

          checkout scm

          String[] parts = sh(returnStdout: true, script: &apos;git log -1 --pretty=%B&apos;).trim().split(&apos;\n&apos;)
          commitMessage = commitMessage + &quot; (&quot; + parts[0] + &quot;)&quot;

        }
        if (env.BRANCH_NAME == &apos;feature/performance-test&apos; &amp;&amp; isDeploy) {
          echo &quot;Process build for ${env.BRANCH_NAME} branch&quot;
          stage(&apos;Build docker &amp;&amp; Deploy to k8s&apos;) {
            container(&apos;gitversion&apos;) {
              SEM_VER = sh (
                script: &apos;/tools/dotnet-gitversion . /showvariable SemVer&apos;,
                returnStdout: true
              ).trim()
              echo &quot;SemVer: ${SEM_VER}&quot;
            }
            if (isBuildBe){
              slackSend channel: &apos;smartlog-stm-v2_5-bugs-tracking&apos;,
                color: &apos;good&apos;,
                message: &quot;Start build ${currentBuild.fullDisplayName}[stm_2_5-Be-Performance] v.${SEM_VER} [${commitMessage}] ${successBuild}/${totalBuild}.&quot;

              container(&apos;awscli&apos;) {
                sh &apos;aws s3 cp s3://smartlog-build-config/stm/appsettings-stm.performance.json Smartlog.Stm.Api/appsettings.Staging.json&apos;
                sh &apos;aws s3 cp s3://smartlog-build-config/stm/deploy.be.performance.yml deploy.be.performance.yml&apos;
                sh &apos;aws s3 cp s3://smartlog-build-config/stm/deploy-report.be.performance.yml deploy-report.be.performance.yml&apos;
                DOCKER_LOGIN = sh (
                  script: &apos;aws ecr get-login --no-include-email --region ap-southeast-1&apos;,
                  returnStdout: true
                ).trim()
              }
              container(&apos;docker&apos;) {
                REGISTRY_URL=&quot;744004065806.dkr.ecr.ap-southeast-1.amazonaws.com/stm-eco:performance&quot;
                sh &quot;&quot;&quot;
                ls -la
                docker build -f Dockerfile.stage --network=host -t ${REGISTRY_URL} --pull=true .
                ${DOCKER_LOGIN}
                docker push ${REGISTRY_URL}
                &quot;&quot;&quot;
              }

              // container(&apos;awscli&apos;) {
              //   sh &apos;aws s3 cp s3://smartlog-build-config/stm/appsettings-stm.stage2.json Smartlog.Stm.Api/appsettings.Staging.json&apos;
              //   DOCKER_LOGIN = sh (
              //     script: &apos;aws ecr get-login --no-include-email --region ap-southeast-1&apos;,
              //     returnStdout: true
              //   ).trim()
              // }
              // container(&apos;docker&apos;) {
              //   REGISTRY_URL=&quot;744004065806.dkr.ecr.ap-southeast-1.amazonaws.com/stm-eco:stage-2&quot;
              //   sh &quot;&quot;&quot;
              //   ls -la
              //   docker build -f Dockerfile.stage2 --network=host -t ${REGISTRY_URL} --pull=true .
              //   ${DOCKER_LOGIN}
              //   docker push ${REGISTRY_URL}
              //   &quot;&quot;&quot;
              // }
              container(&apos;kubectl&apos;) {
                sh &quot;&quot;&quot;
                kubectl apply -f deploy.be.performance.yml
                kubectl patch deployment stm-eco-performance -p &quot;{\\\&quot;spec\\\&quot;:{\\\&quot;template\\\&quot;:{\\\&quot;metadata\\\&quot;:{\\\&quot;labels\\\&quot;:{\\\&quot;date\\\&quot;:\\\&quot;`date +&apos;%s&apos;`\\\&quot;}}}}}&quot; -n stm

                kubectl apply -f deploy-report.be.performance.yml
                kubectl patch deployment stm-eco-report-performance -p &quot;{\\\&quot;spec\\\&quot;:{\\\&quot;template\\\&quot;:{\\\&quot;metadata\\\&quot;:{\\\&quot;labels\\\&quot;:{\\\&quot;date\\\&quot;:\\\&quot;`date +&apos;%s&apos;`\\\&quot;}}}}}&quot; -n stm

                kubectl rollout status deployment stm-eco-performance -n stm
                kubectl rollout status deployment stm-eco-report-performance -n stm
                &quot;&quot;&quot;
              }
              successBuild++
              slackSend channel: &apos;smartlog-stm-v2_5-bugs-tracking&apos;,
                color: &apos;good&apos;,
                message: &quot;The pipeline ${currentBuild.fullDisplayName}[stm_2_5-Be-Performance] v.${SEM_VER} [${commitMessage}] ${successBuild}/${totalBuild} completed successfully.&quot;
            }
          }
          currentBuild.result = &apos;SUCCESS&apos;
        }
      } catch (exc) {
        currentBuild.result = &apos;FAILURE&apos;
        echo &apos;I failed&apos;
        echo exc.getMessage()
      }
      finally {
        echo &apos;One way or another, I have finished&apos;
        try {
          deleteDir() /* clean up our workspace */
        } catch(err) {
          // Do nothing
        }
        if (isDeploy != true) {
          /* Do nothing */
        } else if (currentBuild.result == &apos;SUCCESS&apos;) {
          echo &apos;Build successful&apos;
          // slackSend channel: &apos;project_stm_2_5&apos;,
          //   color: &apos;good&apos;,
          //   message: &quot;The pipeline ${currentBuild.fullDisplayName} completed successfully.&quot;
        } else if (currentBuild.result == &apos;FAILURE&apos;) {
          echo &apos;I failed :(&apos;
          if (env.BRANCH_NAME == &apos;staging&apos; || env.BRANCH_NAME == &apos;master&apos;){
            slackSend channel: &apos;smartlog-stm-v2_5-bugs-tracking&apos;,
            color: &apos;#c40e0e&apos;,
            message: &quot;Attention @here ${env.JOB_NAME} #${env.BUILD_NUMBER} [${commitMessage}] has failed.&quot;
          } else {
            slackSend channel: &apos;project_stm_2_5&apos;,
            color: &apos;#c40e0e&apos;,
            message: &quot;Attention @here ${env.JOB_NAME} #${env.BUILD_NUMBER} [${commitMessage}] has failed.&quot;
          }
        }
      }
    }
  }
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>234085339</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>164140876</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2641824946</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>113801576</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>104769319</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>53</iota>
    <head>1:53</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.6.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>https://bitbucket.org/smartlogtms/smartlog.stm.2.5.git</url>
            <credentialsId>f1011a6a-b720-4819-b875-826292740ef0</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/dev</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision reference="../../../../../../../actions/hudson.plugins.git.util.BuildData/buildsByBranchName/entry/hudson.plugins.git.util.Build/marked"/>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node>pod-with-gitversion-rrn9t-85g82</node>
      <workspace>/home/jenkins/agent/workspace/ormance_feature_performance-test</workspace>
      <changelogFile>/var/jenkins_home/jobs/smartlog.stm.2.5-be-performance/branches/feature-performance-test.h2vadf/builds/118/changelog1005738769169533719.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.6.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/feature/performance-test:refs/remotes/origin/feature/performance-test</refspec>
            <url>https://bitbucket.org/smartlogtms/smartlog.stm.2.5.git</url>
            <credentialsId>f1011a6a-b720-4819-b875-826292740ef0</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>feature/performance-test</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <browser class="hudson.plugins.git.browser.BitbucketWeb">
          <url>https://bitbucket.org/smartlogtms/smartlog.stm.2.5</url>
        </browser>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision plugin="git-client@3.7.0">
                <sha1>41353cd0f928f7f20ffcaf95f69c321de387829d</sha1>
                <branches class="singleton-set">
                  <hudson.plugins.git.Branch>
                    <sha1 reference="../../../sha1"/>
                    <name>feature/performance-test</name>
                  </hudson.plugins.git.Branch>
                </branches>
              </revision>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node>pod-with-gitversion-rrn9t-85g82</node>
      <workspace>/home/jenkins/agent/workspace/ormance_feature_performance-test</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>